PROMPT create table 'P_ATELIERS'
CREATE TABLE P_ATELIERS 
(
  ID_ATELIER NUMBER NOT NULL 
, LANGUE VARCHAR2(20) NOT NULL 
, NOM_ATELIER VARCHAR2(20) NOT NULL 
, ID_JURY NUMBER NOT NULL 
, ID_TYPE NUMBER NOT NULL 
, ID_CATEGORIE NUMBER NOT NULL 
, CONSTRAINT P_ATELIERS_PK PRIMARY KEY 
  (
    ID_ATELIER 
  )
  ENABLE 
);

PROMPT create table 'P_AUDITEURS'
CREATE TABLE P_AUDITEURS 
(
  ID_AUDITEUR NUMBER NOT NULL 
, CAT_AGE VARCHAR2(20) 
, NOM VARCHAR2(20) 
, ID_JURY NUMBER NOT NULL 
, CONSTRAINT P_AUDITEURS_PK PRIMARY KEY 
  (
    ID_AUDITEUR 
  )
  ENABLE 
);

PROMPT create table 'P_CATEGORIE_ATELIER'
CREATE TABLE P_CATEGORIE_ATELIER 
(
  ID_CATEGORIE NUMBER NOT NULL 
, CONSTRAINT P_CATEGORIES_PK PRIMARY KEY 
  (
    ID_CATEGORIE 
  )
  ENABLE 
);

PROMPT create table 'P_CRITERES'
CREATE TABLE P_CRITERES 
(
  C1 VARCHAR2(20) 
, C2 VARCHAR2(20) 
, C3 VARCHAR2(20) 
, C4 VARCHAR2(20) 
, C5 VARCHAR2(20) 
, ID_ATELIER NUMBER NOT NULL 
);

PROMPT create table 'P_ECOLES'
CREATE TABLE P_ECOLES 
(
  ID_ECOLE NUMBER NOT NULL 
, NOM_EXPO VARCHAR2(50) NOT NULL 
, NOM VARCHAR2(20) 
, CONSTRAINT P_ECOLES_PK PRIMARY KEY 
  (
    ID_ECOLE 
  )
  ENABLE 
);

PROMPT create table 'P_EXPOSANTS'
CREATE TABLE P_EXPOSANTS 
(
  ID_EXPOSANT NUMBER NOT NULL 
, NOM VARCHAR2(20) 
, ID_ATELIER NUMBER NOT NULL 
, ID_ECOLE NUMBER NOT NULL 
, CONSTRAINT P_EXPOSANTS_PK PRIMARY KEY 
  (
    ID_EXPOSANT 
  )
  ENABLE 
);

PROMPT create table 'P_EXPOSITIONS'
CREATE TABLE P_EXPOSITIONS 
(
  NOM_EXPO VARCHAR2(50) NOT NULL 
, DATE_EXPO DATE 
, LIEU_EXPO VARCHAR2(20) 
, ID_ECOLE NUMBER NOT NULL 
, CONSTRAINT P_EXPOSITIONS_PK PRIMARY KEY 
  (
    NOM_EXPO 
  )
  ENABLE 
);

PROMPT create table 'P_INSCRIPTION'
CREATE TABLE P_INSCRIPTION 
(
  ID_AUDITEUR NUMBER NOT NULL 
, ID_ATELIER NUMBER NOT NULL 
);

PROMPT create table 'P_JURY'
CREATE TABLE P_JURY 
(
  ID_JURY NUMBER NOT NULL 
, CONSTRAINT P_JURY_PK PRIMARY KEY 
  (
    ID_JURY 
  )
  ENABLE 
);

PROMPT create table 'P_TYPE_ATELIER'
CREATE TABLE P_TYPE_ATELIER 
(
  ID_TYPE NUMBER NOT NULL 
, CONSTRAINT TABLE1_PK PRIMARY KEY 
  (
    ID_TYPE 
  )
  ENABLE 
);

PROMPT alter table 'P_ATELIERS'
ALTER TABLE P_ATELIERS
ADD CONSTRAINT P_ATELIERS_FK FOREIGN KEY
(
  ID_CATEGORIE 
)
REFERENCES P_CATEGORIE_ATELIER
(
  ID_CATEGORIE 
)
ENABLE;

PROMPT alter table 'P_ATELIERS'
ALTER TABLE P_ATELIERS
ADD CONSTRAINT P_ATELIERS_P_JURY_FK FOREIGN KEY
(
  ID_JURY 
)
REFERENCES P_JURY
(
  ID_JURY 
)
ENABLE;

PROMPT alter table 'P_ATELIERS'
ALTER TABLE P_ATELIERS
ADD CONSTRAINT P_ATELIERS_P_TYPE_ATELIER_FK FOREIGN KEY
(
  ID_TYPE 
)
REFERENCES P_TYPE_ATELIER
(
  ID_TYPE 
)
ENABLE;

PROMPT alter table 'P_AUDITEURS'
ALTER TABLE P_AUDITEURS
ADD CONSTRAINT P_AUDITEURS_P_JURY_FK FOREIGN KEY
(
  ID_JURY 
)
REFERENCES P_JURY
(
  ID_JURY 
)
ENABLE;

PROMPT alter table 'P_CRITERES'
ALTER TABLE P_CRITERES
ADD CONSTRAINT P_CRITERES_P_ATELIERS_FK FOREIGN KEY
(
  ID_ATELIER 
)
REFERENCES P_ATELIERS
(
  ID_ATELIER 
)
ENABLE;

PROMPT alter table 'P_ECOLES'
ALTER TABLE P_ECOLES
ADD CONSTRAINT P_ECOLES_P_EXPOSITIONS_FK FOREIGN KEY
(
  NOM_EXPO 
)
REFERENCES P_EXPOSITIONS
(
  NOM_EXPO 
)
ENABLE;

PROMPT alter table 'P_EXPOSANTS'
ALTER TABLE P_EXPOSANTS
ADD CONSTRAINT P_EXPOSANTS_P_ATELIERS_FK FOREIGN KEY
(
  ID_ATELIER 
)
REFERENCES P_ATELIERS
(
  ID_ATELIER 
)
ENABLE;

PROMPT alter table 'P_EXPOSANTS'
ALTER TABLE P_EXPOSANTS
ADD CONSTRAINT P_EXPOSANTS_P_ECOLES_FK FOREIGN KEY
(
  ID_ECOLE 
)
REFERENCES P_ECOLES
(
  ID_ECOLE 
)
ENABLE;

PROMPT alter table 'P_EXPOSITIONS'
ALTER TABLE P_EXPOSITIONS
ADD CONSTRAINT P_EXPOSITIONS_P_ECOLES_FK FOREIGN KEY
(
  ID_ECOLE 
)
REFERENCES P_ECOLES
(
  ID_ECOLE 
)
ENABLE;

PROMPT alter table 'P_INSCRIPTION'
ALTER TABLE P_INSCRIPTION
ADD CONSTRAINT P_INSCRIPTION_P_ATELIERS_FK FOREIGN KEY
(
  ID_ATELIER 
)
REFERENCES P_ATELIERS
(
  ID_ATELIER 
)
ENABLE;

PROMPT alter table 'P_INSCRIPTION'
ALTER TABLE P_INSCRIPTION
ADD CONSTRAINT P_INSCRIPTION_P_AUDITEURS_FK FOREIGN KEY
(
  ID_AUDITEUR 
)
REFERENCES P_AUDITEURS
(
  ID_AUDITEUR 
)
ENABLE;

PROMPT create sequence 'P_ATELIERS_SEQ'
CREATE SEQUENCE P_ATELIERS_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;

PROMPT create sequence 'P_AUDITEURS_SEQ'
CREATE SEQUENCE P_AUDITEURS_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;

PROMPT create sequence 'P_CATEGORIE_ATELIER_SEQ'
CREATE SEQUENCE P_CATEGORIE_ATELIER_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;

PROMPT create sequence 'P_CRITERES_SEQ'
CREATE SEQUENCE P_CRITERES_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;

PROMPT create sequence 'P_ECOLES_SEQ'
CREATE SEQUENCE P_ECOLES_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;

PROMPT create sequence 'P_EXPOSANTS_SEQ'
CREATE SEQUENCE P_EXPOSANTS_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;

PROMPT create sequence 'P_EXPOSITIONS_SEQ'
CREATE SEQUENCE P_EXPOSITIONS_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;

PROMPT create sequence 'P_INSCRIPTION_SEQ'
CREATE SEQUENCE P_INSCRIPTION_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;

PROMPT create sequence 'P_JURY_SEQ'
CREATE SEQUENCE P_JURY_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;

PROMPT create sequence 'P_TYPE_ATELIER_SEQ'
CREATE SEQUENCE P_TYPE_ATELIER_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;

PROMPT create trigger 'P_ATELIERS_TRG'
CREATE TRIGGER P_ATELIERS_TRG 
BEFORE INSERT ON P_ATELIERS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID_ATELIER IS NULL THEN
      SELECT P_ATELIERS_SEQ.NEXTVAL INTO :NEW.ID_ATELIER FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

PROMPT create trigger 'P_AUDITEURS_TRG'
CREATE TRIGGER P_AUDITEURS_TRG 
BEFORE INSERT ON P_AUDITEURS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID_AUDITEUR IS NULL THEN
      SELECT P_AUDITEURS_SEQ.NEXTVAL INTO :NEW.ID_AUDITEUR FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

PROMPT create trigger 'P_CATEGORIE_ATELIER_TRG'
CREATE TRIGGER P_CATEGORIE_ATELIER_TRG 
BEFORE INSERT ON P_CATEGORIE_ATELIER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID_CATEGORIE IS NULL THEN
      SELECT P_CATEGORIE_ATELIER_SEQ.NEXTVAL INTO :NEW.ID_CATEGORIE FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

PROMPT create trigger 'P_CRITERES_TRG'
CREATE TRIGGER P_CRITERES_TRG 
BEFORE INSERT ON P_CRITERES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.C1 IS NULL THEN
      SELECT P_CRITERES_SEQ.NEXTVAL INTO :NEW.C1 FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

PROMPT create trigger 'P_ECOLES_TRG'
CREATE TRIGGER P_ECOLES_TRG 
BEFORE INSERT ON P_ECOLES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID_ECOLE IS NULL THEN
      SELECT P_ECOLES_SEQ.NEXTVAL INTO :NEW.ID_ECOLE FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

PROMPT create trigger 'P_EXPOSANTS_TRG'
CREATE TRIGGER P_EXPOSANTS_TRG 
BEFORE INSERT ON P_EXPOSANTS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID_EXPOSANT IS NULL THEN
      SELECT P_EXPOSANTS_SEQ.NEXTVAL INTO :NEW.ID_EXPOSANT FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

PROMPT create trigger 'P_EXPOSITIONS_TRG'
CREATE TRIGGER P_EXPOSITIONS_TRG 
BEFORE INSERT ON P_EXPOSITIONS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.NOM_EXPO IS NULL THEN
      SELECT P_EXPOSITIONS_SEQ.NEXTVAL INTO :NEW.NOM_EXPO FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

PROMPT create trigger 'P_INSCRIPTION_TRG'
CREATE TRIGGER P_INSCRIPTION_TRG 
BEFORE INSERT ON P_INSCRIPTION 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID_AUDITEUR IS NULL THEN
      SELECT P_INSCRIPTION_SEQ.NEXTVAL INTO :NEW.ID_AUDITEUR FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

PROMPT create trigger 'P_JURY_TRG'
CREATE TRIGGER P_JURY_TRG 
BEFORE INSERT ON P_JURY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID_JURY IS NULL THEN
      SELECT P_JURY_SEQ.NEXTVAL INTO :NEW.ID_JURY FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

PROMPT create trigger 'P_TYPE_ATELIER_TRG'
CREATE TRIGGER P_TYPE_ATELIER_TRG 
BEFORE INSERT ON P_TYPE_ATELIER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID_TYPE IS NULL THEN
      SELECT P_TYPE_ATELIER_SEQ.NEXTVAL INTO :NEW.ID_TYPE FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

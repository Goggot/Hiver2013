package model.view;

import model.view.common.PInscriptionViewRow;

import oracle.jbo.Row;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 07 16:24:28 EDT 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PInscriptionViewRowImpl
  extends ViewRowImpl
  implements PInscriptionViewRow
{


  public static final int ENTITY_PINSCRIPTION = 0;

  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
   */
  public enum AttributesEnum
  {
    Noauditeur
    {
      public Object get(PInscriptionViewRowImpl obj)
      {
        return obj.getNoauditeur();
      }

      public void put(PInscriptionViewRowImpl obj, Object value)
      {
        obj.setNoauditeur((Integer)value);
      }
    }
    ,
    Noatel
    {
      public Object get(PInscriptionViewRowImpl obj)
      {
        return obj.getNoatel();
      }

      public void put(PInscriptionViewRowImpl obj, Object value)
      {
        obj.setNoatel((Integer)value);
      }
    }
    ,
    Dateinscription
    {
      public Object get(PInscriptionViewRowImpl obj)
      {
        return obj.getDateinscription();
      }

      public void put(PInscriptionViewRowImpl obj, Object value)
      {
        obj.setDateinscription((Timestamp)value);
      }
    }
    ,
    ModePaiement
    {
      public Object get(PInscriptionViewRowImpl obj)
      {
        return obj.getModePaiement();
      }

      public void put(PInscriptionViewRowImpl obj, Object value)
      {
        obj.setModePaiement((String)value);
      }
    }
    ,
    NoCarte
    {
      public Object get(PInscriptionViewRowImpl obj)
      {
        return obj.getNoCarte();
      }

      public void put(PInscriptionViewRowImpl obj, Object value)
      {
        obj.setNoCarte((String)value);
      }
    }
    ,
    NoCheque
    {
      public Object get(PInscriptionViewRowImpl obj)
      {
        return obj.getNoCheque();
      }

      public void put(PInscriptionViewRowImpl obj, Object value)
      {
        obj.setNoCheque((Integer)value);
      }
    }
    ,
    DateExpire
    {
      public Object get(PInscriptionViewRowImpl obj)
      {
        return obj.getDateExpire();
      }

      public void put(PInscriptionViewRowImpl obj, Object value)
      {
        obj.setDateExpire((Timestamp)value);
      }
    }
    ,
    Acquitter
    {
      public Object get(PInscriptionViewRowImpl obj)
      {
        return obj.getAcquitter();
      }

      public void put(PInscriptionViewRowImpl obj, Object value)
      {
        obj.setAcquitter((Integer)value);
      }
    }
    ,
    Confirmationenvoyee
    {
      public Object get(PInscriptionViewRowImpl obj)
      {
        return obj.getConfirmationenvoyee();
      }

      public void put(PInscriptionViewRowImpl obj, Object value)
      {
        obj.setConfirmationenvoyee((Integer)value);
      }
    }
    ,
    Creepar
    {
      public Object get(PInscriptionViewRowImpl obj)
      {
        return obj.getCreepar();
      }

      public void put(PInscriptionViewRowImpl obj, Object value)
      {
        obj.setCreepar((String)value);
      }
    }
    ,
    PAuditeurLogIn
    {
      public Object get(PInscriptionViewRowImpl obj)
      {
        return obj.getPAuditeurLogIn();
      }

      public void put(PInscriptionViewRowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    PEvaluationView
    {
      public Object get(PInscriptionViewRowImpl obj)
      {
        return obj.getPEvaluationView();
      }

      public void put(PInscriptionViewRowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static int firstIndex = 0;

    public abstract Object get(PInscriptionViewRowImpl object);

    public abstract void put(PInscriptionViewRowImpl object, Object value);

    public int index()
    {
      return AttributesEnum.firstIndex() + ordinal();
    }

    public static int firstIndex()
    {
      return firstIndex;
    }

    public static int count()
    {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    public static AttributesEnum[] staticValues()
    {
      if (vals == null)
      {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }


  public static final int NOAUDITEUR = AttributesEnum.Noauditeur.index();
  public static final int NOATEL = AttributesEnum.Noatel.index();
  public static final int DATEINSCRIPTION = AttributesEnum.Dateinscription.index();
  public static final int MODEPAIEMENT = AttributesEnum.ModePaiement.index();
  public static final int NOCARTE = AttributesEnum.NoCarte.index();
  public static final int NOCHEQUE = AttributesEnum.NoCheque.index();
  public static final int DATEEXPIRE = AttributesEnum.DateExpire.index();
  public static final int ACQUITTER = AttributesEnum.Acquitter.index();
  public static final int CONFIRMATIONENVOYEE = AttributesEnum.Confirmationenvoyee.index();
  public static final int CREEPAR = AttributesEnum.Creepar.index();
  public static final int PAUDITEURLOGIN = AttributesEnum.PAuditeurLogIn.index();
  public static final int PEVALUATIONVIEW = AttributesEnum.PEvaluationView.index();

  /**
   * This is the default constructor (do not remove).
   */
  public PInscriptionViewRowImpl()
  {
  }

  /**
   * Gets PInscription entity object.
   * @return the PInscription
   */
  public EntityImpl getPInscription()
  {
    return (EntityImpl) getEntity(ENTITY_PINSCRIPTION);
  }

  /**
   * Gets the attribute value for NOAUDITEUR using the alias name Noauditeur.
   * @return the NOAUDITEUR
   */
  public Integer getNoauditeur()
  {
    return (Integer) getAttributeInternal(NOAUDITEUR);
  }

  /**
   * Sets <code>value</code> as attribute value for NOAUDITEUR using the alias name Noauditeur.
   * @param value value to set the NOAUDITEUR
   */
  public void setNoauditeur(Integer value)
  {
    setAttributeInternal(NOAUDITEUR, value);
  }

  /**
   * Gets the attribute value for NOATEL using the alias name Noatel.
   * @return the NOATEL
   */
  public Integer getNoatel()
  {
    return (Integer) getAttributeInternal(NOATEL);
  }

  /**
   * Sets <code>value</code> as attribute value for NOATEL using the alias name Noatel.
   * @param value value to set the NOATEL
   */
  public void setNoatel(Integer value)
  {
    setAttributeInternal(NOATEL, value);
  }

  /**
   * Gets the attribute value for DATEINSCRIPTION using the alias name Dateinscription.
   * @return the DATEINSCRIPTION
   */
  public Timestamp getDateinscription()
  {
    return (Timestamp) getAttributeInternal(DATEINSCRIPTION);
  }

  /**
   * Sets <code>value</code> as attribute value for DATEINSCRIPTION using the alias name Dateinscription.
   * @param value value to set the DATEINSCRIPTION
   */
  public void setDateinscription(Timestamp value)
  {
    setAttributeInternal(DATEINSCRIPTION, value);
  }

  /**
   * Gets the attribute value for MODE_PAIEMENT using the alias name ModePaiement.
   * @return the MODE_PAIEMENT
   */
  public String getModePaiement()
  {
    return (String) getAttributeInternal(MODEPAIEMENT);
  }

  /**
   * Sets <code>value</code> as attribute value for MODE_PAIEMENT using the alias name ModePaiement.
   * @param value value to set the MODE_PAIEMENT
   */
  public void setModePaiement(String value)
  {
    setAttributeInternal(MODEPAIEMENT, value);
  }

  /**
   * Gets the attribute value for NO_CARTE using the alias name NoCarte.
   * @return the NO_CARTE
   */
  public String getNoCarte()
  {
    return (String) getAttributeInternal(NOCARTE);
  }

  /**
   * Sets <code>value</code> as attribute value for NO_CARTE using the alias name NoCarte.
   * @param value value to set the NO_CARTE
   */
  public void setNoCarte(String value)
  {
    setAttributeInternal(NOCARTE, value);
  }

  /**
   * Gets the attribute value for NO_CHEQUE using the alias name NoCheque.
   * @return the NO_CHEQUE
   */
  public Integer getNoCheque()
  {
    return (Integer) getAttributeInternal(NOCHEQUE);
  }

  /**
   * Sets <code>value</code> as attribute value for NO_CHEQUE using the alias name NoCheque.
   * @param value value to set the NO_CHEQUE
   */
  public void setNoCheque(Integer value)
  {
    setAttributeInternal(NOCHEQUE, value);
  }

  /**
   * Gets the attribute value for DATE_EXPIRE using the alias name DateExpire.
   * @return the DATE_EXPIRE
   */
  public Timestamp getDateExpire()
  {
    return (Timestamp) getAttributeInternal(DATEEXPIRE);
  }

  /**
   * Sets <code>value</code> as attribute value for DATE_EXPIRE using the alias name DateExpire.
   * @param value value to set the DATE_EXPIRE
   */
  public void setDateExpire(Timestamp value)
  {
    setAttributeInternal(DATEEXPIRE, value);
  }

  /**
   * Gets the attribute value for ACQUITTER using the alias name Acquitter.
   * @return the ACQUITTER
   */
  public Integer getAcquitter()
  {
    return (Integer) getAttributeInternal(ACQUITTER);
  }

  /**
   * Sets <code>value</code> as attribute value for ACQUITTER using the alias name Acquitter.
   * @param value value to set the ACQUITTER
   */
  public void setAcquitter(Integer value)
  {
    setAttributeInternal(ACQUITTER, value);
  }

  /**
   * Gets the attribute value for CONFIRMATIONENVOYEE using the alias name Confirmationenvoyee.
   * @return the CONFIRMATIONENVOYEE
   */
  public Integer getConfirmationenvoyee()
  {
    return (Integer) getAttributeInternal(CONFIRMATIONENVOYEE);
  }

  /**
   * Sets <code>value</code> as attribute value for CONFIRMATIONENVOYEE using the alias name Confirmationenvoyee.
   * @param value value to set the CONFIRMATIONENVOYEE
   */
  public void setConfirmationenvoyee(Integer value)
  {
    setAttributeInternal(CONFIRMATIONENVOYEE, value);
  }

  /**
   * Gets the attribute value for CREEPAR using the alias name Creepar.
   * @return the CREEPAR
   */
  public String getCreepar()
  {
    return (String) getAttributeInternal(CREEPAR);
  }

  /**
   * Sets <code>value</code> as attribute value for CREEPAR using the alias name Creepar.
   * @param value value to set the CREEPAR
   */
  public void setCreepar(String value)
  {
    setAttributeInternal(CREEPAR, value);
  }

  /**
   * Gets the associated <code>Row</code> using master-detail link PAuditeurLogIn.
   */
  public Row getPAuditeurLogIn()
  {
    return (Row) getAttributeInternal(PAUDITEURLOGIN);
  }

  /**
   * Sets the master-detail link PAuditeurLogIn between this object and <code>value</code>.
   */
  public void setPAuditeurLogIn(Row value)
  {
    setAttributeInternal(PAUDITEURLOGIN, value);
  }

  /**
   * Gets the associated <code>Row</code> using master-detail link PEvaluationView.
   */
  public Row getPEvaluationView()
  {
    return (Row) getAttributeInternal(PEVALUATIONVIEW);
  }

  /**
   * Sets the master-detail link PEvaluationView between this object and <code>value</code>.
   */
  public void setPEvaluationView(Row value)
  {
    setAttributeInternal(PEVALUATIONVIEW, value);
  }

  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param attrDef the attribute

   * @return the attribute value
   * @throws Exception
   */
  protected Object getAttrInvokeAccessor(int index,
                                         AttributeDefImpl attrDef)
    throws Exception
  {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count()))
    {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

  /**
   * setAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param value the value to assign to the attribute
   * @param attrDef the attribute

   * @throws Exception
   */
  protected void setAttrInvokeAccessor(int index, Object value,
                                       AttributeDefImpl attrDef)
    throws Exception
  {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count()))
    {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }
}
